{"version":3,"file":"secure-storage.umd.js","sources":["../src/enums/EncodingType.ts","../src/helpers/generateSecretKey.ts","../src/index.ts"],"sourcesContent":["export enum EncodingType {\r\n    AES = 'aes',\r\n    DES = 'des',\r\n    TDES = 'tdes',\r\n    Rabbit = 'rabbit',\r\n    RC4 = 'rc4',\r\n}\r\n","import CryptoES from 'crypto-es';\r\nimport { IKeySaltPair } from 'src/interfaces/IKeySaltPair';\r\n\r\nconst _generateSecretKey = (secretPhrase: string, salt: CryptoES.lib.WordArray) => {\r\n    const key128Bits = CryptoES.PBKDF2(secretPhrase, salt, { keySize: 128 / 32 });\r\n    return key128Bits?.toString();\r\n};\r\n\r\nexport const generateSecretKeyWithSalt = (secretPhrase: string, saltAsHex?: string): IKeySaltPair => {\r\n    let salt = CryptoES.lib.WordArray.random(128 / 8);\r\n    if (saltAsHex) {\r\n        salt = CryptoES.enc.Hex.parse(saltAsHex);\r\n    }\r\n\r\n    const key128Bits = _generateSecretKey(secretPhrase, salt);\r\n    return { key: key128Bits, salt: salt.toString(CryptoES.enc.Hex) };\r\n};\r\n\r\nexport const generateSecretKey = (secretPhrase: string) => {\r\n    return generateSecretKeyWithSalt(secretPhrase);\r\n};\r\n","import FingerprintJS from '@fingerprintjs/fingerprintjs';\r\nimport CryptoES from 'crypto-es';\r\nimport Cookies from 'js-cookie';\r\nimport { EncodingType } from './enums/EncodingType';\r\nimport { generateSecretKey, generateSecretKeyWithSalt } from './helpers/generateSecretKey';\r\nimport { IEncryptionConfig } from './interfaces/IEncryptionConfig';\r\nimport { IKeySaltPair } from './interfaces/IKeySaltPair';\r\nimport { ISecureStorage } from './interfaces/ISecureStorage';\r\nimport { ISecureStorageConfig } from './interfaces/ISecureStorageConfig';\r\nimport { ISecureStorageConfigBase } from './interfaces/ISecureStorageConfigBase';\r\nimport { ISecureStorageFactory } from './interfaces/ISecureStorageFactory';\r\n\r\nclass SecureStorage {\r\n    private static browserFingerPrint?: string;\r\n    private _encrypt = CryptoES.AES.encrypt;\r\n    private _decrypt = CryptoES.AES.decrypt;\r\n    private _isInitialized = false;\r\n    private _storage: Storage = window?.localStorage ?? localStorage;\r\n    private _encryptionSecret: IEncryptionConfig = {\r\n        expires: 90,\r\n    };\r\n\r\n    config: ISecureStorageConfigBase = {\r\n        encodingType: EncodingType.AES,\r\n        storageNamespace: 'secure',\r\n    };\r\n\r\n    constructor(config: Partial<ISecureStorageConfig>) {\r\n        this.setConfig(config);\r\n        this.setCryptoMethods();\r\n    }\r\n\r\n    initAsync = async () => {\r\n        if (this._encryptionSecret.key !== undefined) {\r\n            this._isInitialized = true;\r\n            return;\r\n        }\r\n\r\n        if (!SecureStorage.browserFingerPrint) {\r\n            const fp = await FingerprintJS.load();\r\n            const result = await fp.get();\r\n            SecureStorage.browserFingerPrint = result.visitorId;\r\n            Object.freeze(SecureStorage.browserFingerPrint);\r\n        }\r\n\r\n        const salt = this.getSaltOrDefaultFromSecurePlace();\r\n        this.setEncryptionSecret(salt);\r\n        this._isInitialized = true;\r\n    };\r\n\r\n    clear = () => {\r\n        for (let index = 0; index < this._storage.length; index++) {\r\n            const key = this._storage.key(index);\r\n            if (key?.startsWith(`${this.config.storageNamespace}.`)) {\r\n                this._storage.removeItem(key);\r\n            }\r\n        }\r\n    };\r\n\r\n    getItem = <T>(key: string): T | null => {\r\n        this.throwIfNotInitialized();\r\n\r\n        key = this.getNamespaceKey(key);\r\n        const encodedItem = this._storage.getItem(key);\r\n        if (encodedItem === null) {\r\n            return null;\r\n        }\r\n\r\n        const decryptedValue = this._decrypt(encodedItem, this._encryptionSecret.key);\r\n        const strValue = decryptedValue.toString(CryptoES.enc.Utf8);\r\n        try {\r\n            return JSON.parse(strValue);\r\n        } catch (e) {\r\n            return strValue as unknown as T;\r\n        }\r\n    };\r\n\r\n    removeItem = (key: string): void => {\r\n        key = this.getNamespaceKey(key);\r\n        this._storage.removeItem(key);\r\n    };\r\n\r\n    setItem = <T>(key: string, value: T): void => {\r\n        this.throwIfNotInitialized();\r\n\r\n        key = this.getNamespaceKey(key);\r\n        let strValue = value as unknown as string;\r\n        if (typeof value !== 'string') {\r\n            strValue = JSON.stringify(value);\r\n        }\r\n\r\n        const encryptedValue = this._encrypt(strValue, this._encryptionSecret.key);\r\n        this._storage.setItem(key, encryptedValue.toString());\r\n    };\r\n\r\n    private get metaKey() {\r\n        return `${this.config.storageNamespace}_metaKey`;\r\n    }\r\n\r\n    private getNamespaceKey = (key: string) => {\r\n        this.throwIfKeyIsUndefined(key);\r\n        return `${this.config.storageNamespace}.${key}`;\r\n    };\r\n\r\n    private throwIfNotInitialized() {\r\n        if (!this._isInitialized) {\r\n            throw new Error('Secure Storage: Is not initialized.');\r\n        }\r\n    }\r\n\r\n    private throwIfKeyIsUndefined(key: string) {\r\n        if (!key) {\r\n            throw new Error('Secure Storage: a key must be provided.');\r\n        }\r\n    }\r\n\r\n    private setEncryptionSecret(salt: string | undefined) {\r\n        if (!SecureStorage.browserFingerPrint) {\r\n            throw new Error('Secure Storage: Browser finger print is not set.');\r\n        }\r\n\r\n        if (!salt) {\r\n            const secret = generateSecretKey(SecureStorage.browserFingerPrint);\r\n            this.setSaltToSecurePlace(secret);\r\n            this._encryptionSecret.key = secret.key;\r\n            Object.freeze(this._encryptionSecret);\r\n            return;\r\n        }\r\n\r\n        this._encryptionSecret.key = generateSecretKeyWithSalt(SecureStorage.browserFingerPrint, salt).key;\r\n        Object.freeze(this._encryptionSecret);\r\n    }\r\n\r\n    private setSaltToSecurePlace(secret: { key: string; salt: string }) {\r\n        Cookies.set(this.metaKey, secret.salt, {\r\n            secure: true,\r\n            sameSite: 'Strict',\r\n            expires: this._encryptionSecret.expires,\r\n        });\r\n    }\r\n\r\n    private getSaltOrDefaultFromSecurePlace() {\r\n        return Cookies.get(this.metaKey);\r\n    }\r\n\r\n    private setConfig(config: Partial<ISecureStorageConfig>) {\r\n        this.config.encodingType = config?.encodingType ?? this.config.encodingType;\r\n        this.config.storageNamespace = config?.storageNamespace ?? this.config.storageNamespace;\r\n        this.setConfigSecret(config);\r\n    }\r\n\r\n    private setConfigSecret(config: Partial<ISecureStorageConfig>) {\r\n        if (config?.encryptionSecret !== undefined) {\r\n            this._encryptionSecret = config.encryptionSecret;\r\n            if (this._encryptionSecret.key) {\r\n                Object.freeze(this._encryptionSecret);\r\n            }\r\n        }\r\n    }\r\n\r\n    private setCryptoMethods() {\r\n        switch (this.config.encodingType) {\r\n            case EncodingType.TDES:\r\n                this._encrypt = CryptoES.TripleDES.encrypt;\r\n                this._decrypt = CryptoES.TripleDES.decrypt;\r\n                break;\r\n            case EncodingType.DES:\r\n                this._encrypt = CryptoES.DES.encrypt;\r\n                this._decrypt = CryptoES.DES.decrypt;\r\n                break;\r\n            case EncodingType.Rabbit:\r\n                this._encrypt = CryptoES.Rabbit.encrypt;\r\n                this._decrypt = CryptoES.Rabbit.decrypt;\r\n                break;\r\n            case EncodingType.RC4:\r\n                this._encrypt = CryptoES.RC4.encrypt;\r\n                this._decrypt = CryptoES.RC4.decrypt;\r\n                break;\r\n            case EncodingType.AES:\r\n                this._encrypt = CryptoES.AES.encrypt;\r\n                this._decrypt = CryptoES.AES.decrypt;\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\nclass SecureStorageFactory implements ISecureStorageFactory {\r\n    generateSecretKeyWithSalt: (secretPhrase: string, saltAsHex?: string) => IKeySaltPair = generateSecretKeyWithSalt;\r\n    async createAsync(config: Partial<ISecureStorageConfig>): Promise<ISecureStorage> {\r\n        const secureStorage = new SecureStorage(config);\r\n        await secureStorage.initAsync();\r\n        return {\r\n            clear: secureStorage.clear,\r\n            setItem: secureStorage.setItem,\r\n            getItem: secureStorage.getItem,\r\n            removeItem: secureStorage.removeItem,\r\n        };\r\n    }\r\n}\r\n\r\nconst factory = new SecureStorageFactory();\r\nexport default factory;\r\nexports['default'] = factory;\r\nmodule.exports = exports['default'];\r\n"],"names":["CryptoES","FingerprintJS","Cookies"],"mappings":"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"}